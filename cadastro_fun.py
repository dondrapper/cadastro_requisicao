"""
M√≥dulo de cadastro de funcion√°rios e gera√ß√£o de crach√°s.
"""

import streamlit as st
import os
from utils import download_cracha, validar_cpf, carregar_estilo_css
from database import cadastrar_funcionario

# Carregar CSS se existir
if os.path.exists("style.css"):
    with open("style.css") as css:
        st.markdown(f"<style>{css.read()}</style>", unsafe_allow_html=True)

def app():
    """
    Inicializa a interface de cadastro de funcion√°rios e gera√ß√£o de crach√°s.
    """
    st.markdown("<h1 style='text-align: center;'>Cadastro de Funcion√°rios</h1>", unsafe_allow_html=True)

    # Lista de setores dispon√≠veis
    setores = ["Dermato", "Farmac√™utica", "Xarope", "Peso M√©dio", "Confer√™ncia", "Encapsula√ß√£o", "Pesagem", "Sache"]

    # Inicializa√ß√£o de estados de sess√£o
    if "nome" not in st.session_state:
        st.session_state["nome"] = ""
    if "cpf" not in st.session_state:
        st.session_state["cpf"] = ""
    if "setor" not in st.session_state:
        st.session_state["setor"] = setores[0]
    if "input_key" not in st.session_state:
        st.session_state["input_key"] = 0
    if "cadastro_bem_sucedido" not in st.session_state:
        st.session_state["cadastro_bem_sucedido"] = False
    if "func_cadastrado" not in st.session_state:
        st.session_state["func_cadastrado"] = {}

    def limpar_inputs():
        """Limpa todos os campos de input e reseta o estado."""
        st.session_state["nome"] = ""
        st.session_state["cpf"] = ""
        st.session_state["setor"] = setores[0]
        st.session_state["cadastro_bem_sucedido"] = False
        st.session_state["func_cadastrado"] = {}
        st.session_state["input_key"] += 1

    # Se o cadastro foi bem-sucedido, mostrar o crach√°
    if st.session_state["cadastro_bem_sucedido"]:
        func = st.session_state["func_cadastrado"]
        
        st.success(f"‚úÖ Funcion√°rio **{func['nome']}** cadastrado com sucesso!")
        st.subheader("Crach√° Gerado")
        
        # Criar colunas para centralizar o crach√°
        col1, col2, col3 = st.columns([1, 2, 1])
        with col2:
            download_cracha(func["cpf"], func["nome"], func["setor"])
        
        # Bot√£o para voltar ao cadastro
        if st.button("üîÑ Novo Cadastro"):
            limpar_inputs()
            st.rerun()
    else:
        # Formul√°rio de cadastro
        with st.form("cadastro_form", clear_on_submit=False):
            nome = st.text_input("Nome", max_chars=50, value=st.session_state["nome"], key=f"nome_input_{st.session_state['input_key']}")
            cpf = st.text_input("CPF (Apenas n√∫meros)", max_chars=11, value=st.session_state["cpf"], key=f"cpf_input_{st.session_state['input_key']}")
            
            # For√ßando uma chave √∫nica para o selectbox
            setor_key = f"setor_input_{st.session_state['input_key']}"
            setor = st.selectbox(
                "Setor", 
                options=setores,
                index=setores.index(st.session_state["setor"]) if st.session_state["setor"] in setores else 0,
                key=setor_key
            )

            codigo = cpf if validar_cpf(cpf) else ""
            st.text_input("C√≥digo do Crach√°", value=codigo, disabled=True, key=f"codigo_cracha_{st.session_state['input_key']}")

            col1, col2, col3 = st.columns([1, 1, 1])
            with col1:
                limpar = st.form_submit_button("üßπ Limpar")
                if limpar:
                    limpar_inputs()
                    st.rerun()
            with col3:
                cadastrar = st.form_submit_button("‚úÖ Cadastrar e Gerar Crach√°")

        if cadastrar:
            if nome and cpf and setor:
                if not validar_cpf(cpf):
                    st.error("‚ö†Ô∏è O CPF deve conter **exatamente 11 n√∫meros**!")
                else:
                    # Atualizar o valor no session_state antes de cadastrar
                    st.session_state["setor"] = setor
                    sucesso, mensagem = cadastrar_funcionario(nome, cpf, setor, cpf)
                    
                    if sucesso:
                        # Atualizar estados de sess√£o
                        st.session_state["cadastro_bem_sucedido"] = True
                        st.session_state["func_cadastrado"] = {
                            "nome": nome,
                            "cpf": cpf,
                            "setor": setor
                        }
                        
                        st.rerun()  # Recarregar a p√°gina para mostrar o crach√°
                    else:
                        st.error(f"‚ùå {mensagem}")
            else:
                st.warning("‚ö†Ô∏è Preencha todos os campos!")

# Garantia que o script seja executado corretamente
if __name__ == "__main__":
    app()